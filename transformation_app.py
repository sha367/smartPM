import streamlit as st
import pandas as pd
import numpy as np
from datetime import datetime, date
import os
import json
import uuid

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–∫–µ–π—Å–∞–º–∏",
    page_icon="üíº",
    layout="wide"
)

# –ü—É—Ç—å –∫ Excel —Ñ–∞–π–ª–∞–º
EXCEL_FILES = [
    "/Users/Vasily_Lukin/Downloads/–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ú–∏—Ö–Ω–µ–Ω–∫–æ_–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞.xlsx",
    "/Users/Vasily_Lukin/Downloads/–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ó—ã—Ä—è–Ω–æ–≤–∞.xlsx",
    "/Users/Vasily_Lukin/Downloads/–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å. –†—É—Å–ª–∞–Ω –ê–º–µ—Ä—Ö–∞–Ω–æ–≤.xlsx"
]
PROJECTS_FILE = "/Users/Vasily_Lukin/projects_database.json"
CHANGELOG_FILE = "/Users/Vasily_Lukin/changelog.json"

# L-—Å—Ç–∞—Ç—É—Å—ã —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
L_STATUSES = {
    "L0": {"name": "–ò–¥–µ—è", "description": "–°–±–æ—Ä –≤—Å–µ—Ö –∏–¥–µ–π, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∞–ª–∏–∑—É–µ–º–æ—Å—Ç–∏ –∏–ª–∏ –º–∞—Å—à—Ç–∞–±–∞"},
    "L1": {"name": "–ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ", "description": "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –ø—Ä–∏–∑–Ω–∞–Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ–π, –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∏ —É—Ç–æ—á–Ω–µ–Ω–∏–µ"},
    "L2": {"name": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å-–∫–µ–π—Å–∞, —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã"},
    "L3": {"name": "–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ", "description": "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –ø–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–º—É –ø–ª–∞–Ω—É, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"},
    "L4": {"name": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ", "description": "–í—Å–µ —à–∞–≥–∏ –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã, –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π"},
    "L5": {"name": "–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ", "description": "–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –≤ –±–∏–∑–Ω–µ—Å-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö"}
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'current_view' not in st.session_state:
    st.session_state.current_view = "projects_list"  # projects_list, project_detail, new_project, changelog

if 'selected_project' not in st.session_state:
    st.session_state.selected_project = None

if 'selected_section' not in st.session_state:
    st.session_state.selected_section = None

if 'projects_database' not in st.session_state:
    st.session_state.projects_database = {}

if 'changelog' not in st.session_state:
    st.session_state.changelog = []

def generate_sample_status_data():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤"""
    status_data = pd.DataFrame({
        "–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞": [
            "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞",
            "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ CRM —Å–∏—Å—Ç–µ–º—ã", 
            "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏",
            "–û–±—É—á–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤",
            "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Å—Ç–∏–∫–∏",
            "–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
        ],
        "–°—Ç–∞—Ç—É—Å": ["L3", "L2", "L4", "L1", "L3", "L5"],
        "–í–ª–∞–¥–µ–ª–µ—Ü": [
            "–ê. –ü–µ—Ç—Ä–æ–≤",
            "–ú. –ò–≤–∞–Ω–æ–≤–∞", 
            "–°. –°–∏–¥–æ—Ä–æ–≤",
            "–ù. –ö–æ–∑–ª–æ–≤–∞",
            "–í. –ü–æ–ø–æ–≤",
            "–ï. –ú–æ—Ä–æ–∑–æ–≤–∞"
        ],
        "–ü—Ä–æ–≥—Ä–µ—Å—Å (%)": [75, 45, 90, 20, 65, 100],
        "–ü–ª–∞–Ω–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç (–º–ª–Ω —Ä—É–±)": [35, 120, 15, 8, 45, 200],
        "–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç (–º–ª–Ω —Ä—É–±)": [28, 0, 14, 0, 30, 195],
        "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞": [
            "2024-01-15", "2024-03-01", "2023-11-01", 
            "2024-06-01", "2024-02-15", "2023-08-01"
        ],
        "–ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ": [
            "2024-12-31", "2025-01-31", "2024-08-31",
            "2024-12-31", "2025-03-31", "2024-06-30"
        ],
        "–ö–ª—é—á–µ–≤—ã–µ –≤–µ—Ö–∏": [
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, A/B —Ç–µ—Å—Ç—ã",
            "–í—ã–±–æ—Ä —Ä–µ—à–µ–Ω–∏—è, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞—à–±–æ—Ä–¥—ã",
            "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è", 
            "–ù–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, —Å–∫–ª–∞–¥—ã",
            "–ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"
        ],
        "–†–∏—Å–∫–∏": [
            "–ù–∏–∑–∫–∏–π —Ç—Ä–∞—Ñ–∏–∫ –≤ Q4",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
            "–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "–í—ã—Å–æ–∫–∞—è —Ç–µ–∫—É—á–µ—Å—Ç—å –∫–∞–¥—Ä–æ–≤",
            "–†–æ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–ø–ª–∏–≤–∞",
            "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
        ],
        "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏": [
            "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–≤—ã—à–∞—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è",
            "–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç",
            "–ó–∞–≤–µ—Ä—à–µ–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ",
            "–ü–æ–∏—Å–∫ –≤–Ω–µ—à–Ω–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞",
            "–ü–∏–ª–æ—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–µ–Ω",
            "–î–æ—Å—Ç–∏–≥–Ω—É—Ç ROI 300%"
        ]
    })
    return status_data

@st.cache_data
def load_excel_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã –∏–∑ Excel —Ñ–∞–π–ª–æ–≤"""
    all_data = {}
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª –ú–∏—Ö–Ω–µ–Ω–∫–æ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    master_file = "/Users/Vasily_Lukin/Downloads/–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ú–∏—Ö–Ω–µ–Ω–∫–æ_–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞.xlsx"
    
    try:
        if os.path.exists(master_file):
            excel_data = pd.read_excel(master_file, sheet_name=None)
            filename = os.path.basename(master_file).replace('.xlsx', '')
            
            for sheet_name, df in excel_data.items():
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–ª—é—á–∞–º–∏ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤:
                
                # 1. –ü–æ–ª–Ω—ã–π –∫–ª—é—á –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                unique_key = f"{filename}_{sheet_name}"
                all_data[unique_key] = df.copy()
                
                # 2. –ü—Ä–æ—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
                all_data[sheet_name] = df.copy()
                
                # 3. –ö–ª—é—á–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                for project_id in ["business_case_1", "business_case_2", "business_case_3"]:
                    project_section_key = f"{project_id}_{sheet_name}"
                    all_data[project_section_key] = df.copy()
            
            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –º–∞—Å—Ç–µ—Ä —Ñ–∞–π–ª: {filename}")
            st.info(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–∞–∑–¥–µ–ª–æ–≤: {', '.join(excel_data.keys())}")
            
    except Exception as e:
        st.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Å—Ç–µ—Ä —Ñ–∞–π–ª {master_file}: {e}")
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤
        default_sections = [
            "a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã",
            "b. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ", 
            "c. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã",
            "d. –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞",
            "e. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∞",
            "f. –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤"
        ]
        
        for section in default_sections:
            empty_df = pd.DataFrame({
                "–ü–∞—Ä–∞–º–µ—Ç—Ä": ["–ü—Ä–∏–º–µ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"],
                "–ó–Ω–∞—á–µ–Ω–∏–µ": ["–ü—Ä–∏–º–µ—Ä –∑–Ω–∞—á–µ–Ω–∏—è"],
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": ["–ü—Ä–∏–º–µ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"]
            })
            all_data[section] = empty_df
            
            # –î–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
            for project_id in ["business_case_1", "business_case_2", "business_case_3"]:
                all_data[f"{project_id}_{section}"] = empty_df.copy()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    status_section = "f. –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤"
    if status_section not in all_data or all_data[status_section].empty:
        sample_data = generate_sample_status_data()
        all_data[status_section] = sample_data
        
        for project_id in ["business_case_1", "business_case_2", "business_case_3"]:
            all_data[f"{project_id}_{status_section}"] = sample_data.copy()
    
    return all_data

def load_changelog():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π"""
    try:
        if os.path.exists(CHANGELOG_FILE):
            with open(CHANGELOG_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {e}")
    return []

def save_changelog(changelog):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π"""
    try:
        with open(CHANGELOG_FILE, 'w', encoding='utf-8') as f:
            json.dump(changelog, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {e}")
        return False

def add_changelog_entry(project_id, action, details, user="–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"):
    """–î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π"""
    entry = {
        "id": str(uuid.uuid4()),
        "project_id": project_id,
        "timestamp": datetime.now().isoformat(),
        "user": user,
        "action": action,
        "details": details
    }
    
    if 'changelog' not in st.session_state:
        st.session_state.changelog = load_changelog()
    
    st.session_state.changelog.append(entry)
    save_changelog(st.session_state.changelog)

def load_projects_database():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    try:
        if os.path.exists(PROJECTS_FILE):
            with open(PROJECTS_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–æ–≤: {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏–∑ Excel —Ñ–∞–π–ª–æ–≤
    today = datetime.now().strftime("%Y-%m-%d")
    
    projects = {
        "business_case_1": {
            "id": "business_case_1",
            "name": "–î–∏–Ω–∞—Å—Ç–∏—è –¥–æ–∫—Ç–æ—Ä–æ–≤ - —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏",
            "description": "–ü—Ä–æ–µ–∫—Ç –ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –≤—ã—Ä—É—á–∫–∏ —á–µ—Ä–µ–∑ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—é –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –¶–µ–ª–µ–≤–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: 35 –º–ª–Ω —Ä—É–± –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É, 80-100 –º–ª–Ω —Ä—É–± –≤ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ.",
            "sections": {
                "a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã": "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ, —Ü–µ–ª–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ",
                "b. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–æ –≥–æ–¥–∞–º",
                "c. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã": "–†–∞—Å—á–µ—Ç—ã –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏ KPI",
                "d. –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞": "–í—Ä–µ–º–µ–Ω–Ω–æ–π –ø–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á",
                "e. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∞": "–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
                "f. –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤": "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å"
            },
            "status": "L3",
            "owner": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ú–∏—Ö–Ω–µ–Ω–∫–æ",
            "department": "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ø—Ä–æ–¥–∞–∂–∏",
            "start_date": "2024-01-15",
            "end_date": "2024-12-15",
            "last_updated": today,
            "created_date": "2024-01-01",
            "target_revenue": "35 –º–ª–Ω —Ä—É–± (2024), 80-100 –º–ª–Ω —Ä—É–± (–ø—Ä–æ–µ–∫—Ü–∏—è)",
            "key_metrics": "–ö–æ–Ω–≤–µ—Ä—Å–∏—è 0.6‚Üí0.7, –≤—ã—Ä—É—á–∫–∞ +35–ú —Ä—É–±"
        }
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if os.path.exists("/Users/Vasily_Lukin/Downloads/–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ó—ã—Ä—è–Ω–æ–≤–∞.xlsx"):
        projects["business_case_2"] = {
            "id": "business_case_2",
            "name": "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏–∑ –ö–≠–í–∞ –≤ –æ–ø–ª–∞—Ç—É",
            "description": "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏, —É—Å–∏–ª–µ–Ω–∏–µ –ö–≠–í–∞, –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –∫–∞—Å–∞–Ω–∏—è –ø–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é. –¶–µ–ª–µ–≤–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: –∫–æ–Ω–≤–µ—Ä—Å–∏—è —Å 12% –¥–æ 20%.",
            "sections": {
                "a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã": "–û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ",
                "b. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ": "–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ –ø–æ –≥–æ–¥–∞–º: 120–ú —Ä—É–± (2025), 240–ú —Ä—É–± (2026), 480–ú —Ä—É–± (2027)",
                "c. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã": "–†–∞—Å—á–µ—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å 12% –¥–æ 20%",
                "d. –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞": "–ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å",
                "e. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∞": "–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏ –≤—ã—Ä—É—á–∫–∏",
                "f. –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤": "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å"
            },
            "status": "L2",
            "owner": "–†–û–ü –æ—Ñ–∏—Å –ú–æ—Å–∫–≤–∞",
            "department": "–ü—Ä–æ–¥–∞–∂–∏ –∏ —Å–µ—Ä–≤–∏—Å",
            "start_date": "2025-05-12",
            "end_date": "2025-12-01",
            "last_updated": today,
            "created_date": "2025-04-01",
            "target_revenue": "120 –º–ª–Ω —Ä—É–± (2025), 240 –º–ª–Ω —Ä—É–± (2026), 480 –º–ª–Ω —Ä—É–± (2027)",
            "key_metrics": "–ö–æ–Ω–≤–µ—Ä—Å–∏—è –ö–≠–í‚Üí–æ–ø–ª–∞—Ç–∞: 12%‚Üí20% (+8%)"
        }
        
    if os.path.exists("/Users/Vasily_Lukin/Downloads/–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å. –†—É—Å–ª–∞–Ω –ê–º–µ—Ä—Ö–∞–Ω–æ–≤.xlsx"):
        projects["business_case_3"] = {
            "id": "business_case_3", 
            "name": "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏–∑ –ª–∏–¥–∞ –≤ –∑–∞–ø–∏—Å—å",
            "description": "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –≤–≤–µ–¥–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞, —Ä–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã –∏ –æ–±—É—á–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –¶–µ–ª–µ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è: —Å 30% –¥–æ 40%.",
            "sections": {
                "a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã": "–†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, —Å–∫—Ä–∏–ø—Ç—ã, –æ–±—É—á–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤",
                "b. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ": "–í—ã—Ä—É—á–∫–∞: 35 –º–ª–Ω —Ä—É–± (2025), 80 –º–ª–Ω —Ä—É–± (2026), 100 –º–ª–Ω —Ä—É–± (2027)",
                "c. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã": "–ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π —Å 30% –¥–æ 40%",
                "d. –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞": "–í–≤–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞, –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –æ—Ç–≤–∞–ª–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å —Å–æ–±–ª—é–¥–µ–Ω–∏—è",
                "e. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∞": "–ü–ª–∞–Ω —Ä–æ—Å—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏: 25%‚Üí30%‚Üí35%‚Üí38%",
                "f. –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤": "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å"
            },
            "status": "L1",
            "owner": "–°–≤–µ—Ç–ª–∞–Ω–∞ (–†–û–ü)",
            "department": "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏",
            "start_date": "2025-05-01",
            "end_date": "2025-07-30",
            "last_updated": today,
            "created_date": "2025-04-15",
            "target_revenue": "35 –º–ª–Ω —Ä—É–± (2025), 80 –º–ª–Ω —Ä—É–± (2026), 100 –º–ª–Ω —Ä—É–± (2027)",
            "key_metrics": "–ö–æ–Ω–≤–µ—Ä—Å–∏—è –ª–∏–¥‚Üí–∑–∞–ø–∏—Å—å: 30%‚Üí40% (+10%)"
        }
    
    return projects

def save_projects_database(projects_db):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    try:
        with open(PROJECTS_FILE, 'w', encoding='utf-8') as f:
            json.dump(projects_db, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–æ–≤: {e}")
        return False

def get_project_info():
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö"""
    if not st.session_state.projects_database:
        st.session_state.projects_database = load_projects_database()
    
    return list(st.session_state.projects_database.values())

def create_new_project(project_data):
    """–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç"""
    project_id = str(uuid.uuid4())
    today = datetime.now().strftime("%Y-%m-%d")
    
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    default_sections = {
        "a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã": "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
        "b. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã", 
        "c. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã": "–†–∞—Å—á–µ—Ç—ã –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è",
        "d. –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏",
        "e. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∞": "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
        "f. –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤": "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å"
    }
    
    new_project = {
        "id": project_id,
        "name": project_data["name"],
        "description": project_data["description"],
        "sections": default_sections,
        "status": project_data["status"],
        "owner": project_data["owner"],
        "department": project_data.get("department", "–ù–µ —É–∫–∞–∑–∞–Ω"),
        "start_date": project_data.get("start_date", ""),
        "end_date": project_data.get("end_date", ""),
        "last_updated": today,
        "created_date": today
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    st.session_state.projects_database[project_id] = new_project
    
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
    for section_name in default_sections.keys():
        if section_name not in st.session_state.get('excel_data', {}):
            # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
            empty_df = pd.DataFrame({
                "–ü–∞—Ä–∞–º–µ—Ç—Ä": [""],
                "–ó–Ω–∞—á–µ–Ω–∏–µ": [""],
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": [""]
            })
            if 'excel_data' not in st.session_state:
                st.session_state.excel_data = {}
            st.session_state.excel_data[section_name] = empty_df
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    save_projects_database(st.session_state.projects_database)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π
    add_changelog_entry(project_id, "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: {project_data['name']}")
    
    return new_project

def get_column_config(df):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    column_config = {}
    
    for col in df.columns:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Ç–∏–ø–æ–≤
        column_config[col] = st.column_config.TextColumn(
            col,
            help=f"–ü–æ–ª–µ: {col}",
            max_chars=1000,
        )
    
    return column_config

def save_excel_data(data_dict):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ Excel —Ñ–∞–π–ª"""
    try:
        backup_file = "/Users/Vasily_Lukin/business_cases_backup.xlsx"
        
        with pd.ExcelWriter(backup_file, engine='openpyxl') as writer:
            for sheet_name, df in data_dict.items():
                df.to_excel(writer, sheet_name=sheet_name, index=False)
        st.success("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ñ–∞–π–ª!")
        st.info(f"üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
        return True
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
        return False

def show_l_status_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ L-—Å—Ç–∞—Ç—É—Å–∞—Ö"""
    with st.expander("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–∞—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ (L0-L5)"):
        for status_code, status_info in L_STATUSES.items():
            st.markdown(f"**{status_code} - {status_info['name']}**: {status_info['description']}")

def show_projects_list():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    st.title("üíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–∫–µ–π—Å–∞–º–∏")
    st.markdown("---")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ L-—Å—Ç–∞—Ç—É—Å–∞—Ö
    show_l_status_info()
    
    # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    col1, col2, col3 = st.columns([1, 1, 3])
    with col1:
        if st.button("‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", use_container_width=True):
            st.session_state.current_view = "new_project"
            st.rerun()
    
    projects = get_project_info()
    
    if not projects:
        st.info("–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç!")
        return
    
    st.subheader("üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤")
    
    # –§–∏–ª—å—Ç—Ä—ã
    col1, col2, col3 = st.columns(3)
    with col1:
        statuses = list(set([p['status'] for p in projects]))
        status_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É", ["–í—Å–µ"] + statuses)
    with col2:
        owners = list(set([p['owner'] for p in projects]))
        owner_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ –≤–ª–∞–¥–µ–ª—å—Ü—É", ["–í—Å–µ"] + owners)
    with col3:
        departments = list(set([p.get('department', '') for p in projects if p.get('department')]))
        dept_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ –æ—Ç–¥–µ–ª—É", ["–í—Å–µ"] + departments)
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    filtered_projects = projects
    if status_filter != "–í—Å–µ":
        filtered_projects = [p for p in filtered_projects if p['status'] == status_filter]
    if owner_filter != "–í—Å–µ":
        filtered_projects = [p for p in filtered_projects if p['owner'] == owner_filter]
    if dept_filter != "–í—Å–µ":
        filtered_projects = [p for p in filtered_projects if p.get('department') == dept_filter]
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    for project in filtered_projects:
        with st.container():
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞
            status_colors = {
                "L0": "#6c757d", "L1": "#fd7e14", "L2": "#ffc107", 
                "L3": "#007bff", "L4": "#28a745", "L5": "#20c997"
            }
            status_color = status_colors.get(project['status'], "#6c757d")
            
            status_display = f"{project['status']} - {L_STATUSES.get(project['status'], {}).get('name', project['status'])}"
            
            dates_info = ""
            if project.get('start_date') and project.get('end_date'):
                dates_info = f"üìÖ {project['start_date']} - {project['end_date']}"
            
            target_revenue = project.get('target_revenue', '')
            key_metrics = project.get('key_metrics', '')
            
            st.markdown(f"""
            <div style="border: 1px solid #ddd; padding: 20px; margin: 10px 0; border-radius: 8px; background: white;">
                <h3 style="color: #0066cc; margin-top: 0;">{project['name']}</h3>
                <p style="color: #666; margin: 10px 0;">{project['description']}</p>
                <div style="display: flex; gap: 20px; margin: 15px 0; flex-wrap: wrap;">
                    <span><strong>–°—Ç–∞—Ç—É—Å:</strong> <span style="color: {status_color};">{status_display}</span></span>
                    <span><strong>–í–ª–∞–¥–µ–ª–µ—Ü:</strong> {project['owner']}</span>
                    <span><strong>–û—Ç–¥–µ–ª:</strong> {project.get('department', '–ù–µ —É–∫–∞–∑–∞–Ω')}</span>
                </div>
                <div style="display: flex; gap: 20px; margin: 15px 0; flex-wrap: wrap;">
                    <span>{dates_info}</span>
                    <span><strong>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</strong> {project['last_updated']}</span>
                </div>
                {f'<div style="margin: 15px 0; padding: 10px; background: #f8f9fa; border-radius: 4px;"><strong>üéØ –¶–µ–ª–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</strong> {target_revenue}</div>' if target_revenue else ''}
                {f'<div style="margin: 15px 0; padding: 10px; background: #e3f2fd; border-radius: 4px;"><strong>üìä –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:</strong> {key_metrics}</div>' if key_metrics else ''}
            </div>
            """, unsafe_allow_html=True)
            
            col1, col2, col3, col4 = st.columns([1, 1, 1, 2])
            with col1:
                if st.button(f"üìñ –û—Ç–∫—Ä—ã—Ç—å", key=f"open_{project['id']}"):
                    st.session_state.selected_project = project
                    st.session_state.current_view = "project_detail"
                    st.rerun()
            with col2:
                if st.button(f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_{project['id']}"):
                    st.session_state.selected_project = project
                    st.session_state.current_view = "edit_project"
                    st.rerun()
            with col3:
                if st.button(f"üìú –ò—Å—Ç–æ—Ä–∏—è", key=f"history_{project['id']}"):
                    st.session_state.selected_project = project
                    st.session_state.current_view = "changelog"
                    st.rerun()

def show_new_project_form():
    """–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
    st.title("‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")
    st.markdown("---")
    
    col1, col2 = st.columns([1, 4])
    with col1:
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É"):
            st.session_state.current_view = "projects_list"
            st.rerun()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ L-—Å—Ç–∞—Ç—É—Å–∞—Ö
    show_l_status_info()
    
    with st.form("new_project_form"):
        st.subheader("üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        
        col1, col2 = st.columns(2)
        
        with col1:
            name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞*", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
            owner = st.text_input("–í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ–µ–∫—Ç–∞*", placeholder="–§–ò–û –≤–ª–∞–¥–µ–ª—å—Ü–∞")
            department = st.text_input("–û—Ç–¥–µ–ª", placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞")
            
            # L-—Å—Ç–∞—Ç—É—Å—ã
            status_options = [f"{code} - {info['name']}" for code, info in L_STATUSES.items()]
            status_display = st.selectbox("–°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã", status_options)
            status = status_display.split(" - ")[0]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
        
        with col2:
            description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞*", height=100, 
                                     placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–µ–π –∏ –∑–∞–¥–∞—á –ø—Ä–æ–µ–∫—Ç–∞")
            
            col_date1, col_date2 = st.columns(2)
            with col_date1:
                start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞")
            with col_date2:
                end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è")
        
        st.markdown("### üìë –†–∞–∑–¥–µ–ª—ã –ø—Ä–æ–µ–∫—Ç–∞")
        st.info("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã: –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã, –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–ª–∏—è–Ω–∏–µ, –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã, –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞, –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∞, –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤")
        
        # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
        st.markdown("#### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
        additional_sections = st.text_area("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã", 
                                         placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫–µ)",
                                         height=80)
        
        submit_button = st.form_submit_button("üöÄ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", use_container_width=True)
        
        if submit_button:
            if name and owner and description:
                project_data = {
                    "name": name,
                    "description": description,
                    "status": status,
                    "owner": owner,
                    "department": department or "–ù–µ —É–∫–∞–∑–∞–Ω",
                    "start_date": start_date.strftime("%Y-%m-%d") if start_date else "",
                    "end_date": end_date.strftime("%Y-%m-%d") if end_date else ""
                }
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç
                new_project = create_new_project(project_data)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
                if additional_sections.strip():
                    additional_list = [s.strip() for s in additional_sections.split('\n') if s.strip()]
                    for section in additional_list:
                        new_project['sections'][section] = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª: {section}"
                
                st.success(f"‚úÖ –ü—Ä–æ–µ–∫—Ç '{name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                st.info("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç –∏ –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö.")
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–æ–≤–æ–º—É –ø—Ä–æ–µ–∫—Ç—É
                st.session_state.selected_project = new_project
                st.session_state.current_view = "project_detail"
                st.rerun()
                
            else:
                st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã –∑–≤–µ–∑–¥–æ—á–∫–æ–π *)")

def show_edit_project_form():
    """–§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"""
    project = st.session_state.selected_project
    
    if not project:
        st.error("–ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω")
        return
    
    st.title(f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
    st.markdown("---")
    
    col1, col2 = st.columns([1, 4])
    with col1:
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É"):
            st.session_state.current_view = "projects_list"
            st.rerun()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ L-—Å—Ç–∞—Ç—É—Å–∞—Ö
    show_l_status_info()
    
    with st.form("edit_project_form"):
        st.subheader("üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        
        col1, col2 = st.columns(2)
        
        with col1:
            name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞*", value=project['name'])
            owner = st.text_input("–í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ–µ–∫—Ç–∞*", value=project['owner'])
            department = st.text_input("–û—Ç–¥–µ–ª", value=project.get('department', ''))
            
            # L-—Å—Ç–∞—Ç—É—Å—ã
            status_options = [f"{code} - {info['name']}" for code, info in L_STATUSES.items()]
            current_status_display = f"{project['status']} - {L_STATUSES.get(project['status'], {}).get('name', project['status'])}"
            try:
                status_index = status_options.index(current_status_display)
            except ValueError:
                status_index = 0
            
            status_display = st.selectbox("–°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã", status_options, index=status_index)
            status = status_display.split(" - ")[0]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
        
        with col2:
            description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞*", value=project['description'], height=100)
            
            col_date1, col_date2 = st.columns(2)
            with col_date1:
                try:
                    start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", 
                                             value=datetime.strptime(project['start_date'], "%Y-%m-%d").date() if project.get('start_date') else None)
                except:
                    start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞")
            with col_date2:
                try:
                    end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è",
                                           value=datetime.strptime(project['end_date'], "%Y-%m-%d").date() if project.get('end_date') else None)
                except:
                    end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è")
        
        submit_button = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", use_container_width=True)
        
        if submit_button:
            if name and owner and description:
                # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                changes = []
                if project['name'] != name:
                    changes.append(f"–ù–∞–∑–≤–∞–Ω–∏–µ: '{project['name']}' ‚Üí '{name}'")
                if project['description'] != description:
                    changes.append(f"–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ")
                if project['status'] != status:
                    old_status = f"{project['status']} - {L_STATUSES.get(project['status'], {}).get('name', project['status'])}"
                    new_status = f"{status} - {L_STATUSES.get(status, {}).get('name', status)}"
                    changes.append(f"–°—Ç–∞—Ç—É—Å: '{old_status}' ‚Üí '{new_status}'")
                if project['owner'] != owner:
                    changes.append(f"–í–ª–∞–¥–µ–ª–µ—Ü: '{project['owner']}' ‚Üí '{owner}'")
                if project.get('department', '') != department:
                    changes.append(f"–û—Ç–¥–µ–ª: '{project.get('department', '')}' ‚Üí '{department}'")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
                project['name'] = name
                project['description'] = description
                project['status'] = status
                project['owner'] = owner
                project['department'] = department or "–ù–µ —É–∫–∞–∑–∞–Ω"
                project['start_date'] = start_date.strftime("%Y-%m-%d") if start_date else ""
                project['end_date'] = end_date.strftime("%Y-%m-%d") if end_date else ""
                project['last_updated'] = datetime.now().strftime("%Y-%m-%d")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                st.session_state.projects_database[project['id']] = project
                save_projects_database(st.session_state.projects_database)
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
                if changes:
                    change_details = "; ".join(changes)
                    add_changelog_entry(project['id'], "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", change_details)
                
                st.success(f"‚úÖ –ü—Ä–æ–µ–∫—Ç '{name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                st.session_state.current_view = "projects_list"
                st.rerun()
                
            else:
                st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã –∑–≤–µ–∑–¥–æ—á–∫–æ–π *)")

def show_changelog():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ–µ–∫—Ç–∞"""
    project = st.session_state.selected_project
    
    if not project:
        st.error("–ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω")
        return
    
    st.title(f"üìú –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π: {project['name']}")
    st.markdown("---")
    
    col1, col2 = st.columns([1, 4])
    with col1:
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É"):
            st.session_state.current_view = "projects_list"
            st.rerun()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if 'changelog' not in st.session_state:
        st.session_state.changelog = load_changelog()
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    project_changelog = [entry for entry in st.session_state.changelog if entry['project_id'] == project['id']]
    
    if not project_changelog:
        st.info("üìù –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—É—Å—Ç–∞")
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
    project_changelog.sort(key=lambda x: x['timestamp'], reverse=True)
    
    st.subheader(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(project_changelog)}")
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–ø–∏—Å–∏
    for entry in project_changelog:
        timestamp = datetime.fromisoformat(entry['timestamp']).strftime("%Y-%m-%d %H:%M:%S")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
        action_icons = {
            "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞": "üÜï",
            "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞": "‚úèÔ∏è",
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö": "üìù",
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö": "‚ûï",
            "–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö": "üóëÔ∏è"
        }
        icon = action_icons.get(entry['action'], "üìå")
        
        with st.container():
            st.markdown(f"""
            <div style="border-left: 4px solid #0066cc; padding: 15px; margin: 10px 0; background: #f8f9fa; border-radius: 0 5px 5px 0;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
                    <h4 style="margin: 0; color: #0066cc;">{icon} {entry['action']}</h4>
                    <small style="color: #666;">{timestamp}</small>
                </div>
                <p style="margin: 5px 0; color: #333;"><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> {entry['user']}</p>
                <p style="margin: 5px 0; color: #333;"><strong>–î–µ—Ç–∞–ª–∏:</strong> {entry['details']}</p>
            </div>
            """, unsafe_allow_html=True)

def show_project_detail():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
    project = st.session_state.selected_project
    
    if not project:
        st.error("–ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω")
        return
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Excel
    if 'excel_data' not in st.session_state:
        excel_data = load_excel_data()
        if excel_data:
            st.session_state.excel_data = excel_data
        else:
            st.session_state.excel_data = {}
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    col1, col2, col3, col4 = st.columns([1, 1, 1, 2])
    with col1:
        if st.button("‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É"):
            st.session_state.current_view = "projects_list"
            st.rerun()
    with col2:
        if st.button("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"):
            st.session_state.current_view = "edit_project"
            st.rerun()
    with col3:
        if st.button("üìú –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π"):
            st.session_state.current_view = "changelog"
            st.rerun()
    
    st.title(f"üíº {project['name']}")
    st.markdown(f"*{project['description']}*")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        status_display = f"{project['status']} - {L_STATUSES.get(project['status'], {}).get('name', project['status'])}"
        st.metric("–°—Ç–∞—Ç—É—Å", status_display)
    with col2:
        st.metric("–í–ª–∞–¥–µ–ª–µ—Ü", project['owner'])
    with col3:
        st.metric("–û—Ç–¥–µ–ª", project.get('department', '–ù–µ —É–∫–∞–∑–∞–Ω'))
    with col4:
        st.metric("–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", project['last_updated'])
    
    st.markdown("---")
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
    st.sidebar.header("üìë –†–∞–∑–¥–µ–ª—ã –ø—Ä–æ–µ–∫—Ç–∞")
    
    sections = list(project['sections'].keys())
    if not st.session_state.selected_section:
        st.session_state.selected_section = sections[0]
    
    # –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Å–µ–ª–µ–∫—Ç–±–æ–∫—Å–∞
    section_display_names = []
    for section in sections:
        display_name = section
        if "_" in section:
            parts = section.split("_")
            if len(parts) >= 3:
                display_name = "_".join(parts[3:])  # –ë–µ—Ä–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∞
        section_display_names.append(display_name)
    
    selected_display = st.sidebar.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        section_display_names,
        index=section_display_names.index(
            "_".join(st.session_state.selected_section.split("_")[3:]) if "_" in st.session_state.selected_section and len(st.session_state.selected_section.split("_")) >= 3 else st.session_state.selected_section
        ) if st.session_state.selected_section in sections else 0
    )
    
    # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª–Ω—ã–π –∫–ª—é—á —Ä–∞–∑–¥–µ–ª–∞
    selected_section = sections[section_display_names.index(selected_display)]
    
    st.session_state.selected_section = selected_section
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    col1, col2, col3 = st.sidebar.columns(3)
    
    with col1:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", use_container_width=True):
            save_excel_data(st.session_state.excel_data)
    
    with col2:
        if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å", use_container_width=True):
            st.session_state.excel_data = load_excel_data()
            st.rerun()
    
    with col3:
        if st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É", use_container_width=True):
            add_row_to_section(selected_section, project['id'])
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
    show_section_data(selected_section, project['sections'][selected_section], project['id'])

def add_row_to_section(section_name, project_id):
    """–î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª—É"""
    if section_name in st.session_state.excel_data:
        current_df = st.session_state.excel_data[section_name]
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        new_row_data = {}
        for col in current_df.columns:
            new_row_data[col] = ''
        
        new_row = pd.DataFrame([new_row_data])
        st.session_state.excel_data[section_name] = pd.concat([current_df, new_row], ignore_index=True)
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ —Ä–∞–∑–¥–µ–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        empty_df = pd.DataFrame({
            "–ü–∞—Ä–∞–º–µ—Ç—Ä": [""],
            "–ó–Ω–∞—á–µ–Ω–∏–µ": [""],
            "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": [""]
        })
        st.session_state.excel_data[section_name] = empty_df
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π
    add_changelog_entry(project_id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª: {section_name}")
    
    st.rerun()

def show_section_data(section_name, section_description, project_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞"""
    # –£–ø—Ä–æ—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    display_name = section_name
    if "_" in section_name:
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ê–≤—Ç–æ—Ä_" –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å
        parts = section_name.split("_")
        if len(parts) >= 3:
            display_name = "_".join(parts[3:])  # –ë–µ—Ä–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∞
    
    st.header(f"üìÑ {display_name}")
    st.info(section_description)
    
    # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –∫–ª—é—á–µ–π
    data_key = None
    potential_keys = [
        f"{project_id}_{section_name}",  # business_case_1_a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã
        section_name,  # a. –î–µ—Ç–∞–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤ (–≤—Å–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ñ–∞–π–ª –ú–∏—Ö–Ω–µ–Ω–∫–æ)
    file_mappings = {
        "business_case_1": "–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ú–∏—Ö–Ω–µ–Ω–∫–æ_–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞",
        "business_case_2": "–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ú–∏—Ö–Ω–µ–Ω–∫–æ_–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", 
        "business_case_3": "–ë–∏–∑–Ω–µ—Å_–∫–µ–π—Å_–ú–∏—Ö–Ω–µ–Ω–∫–æ_–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞"
    }
    
    if project_id in file_mappings:
        full_key = f"{file_mappings[project_id]}_{section_name}"
        potential_keys.append(full_key)
    
    # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–º –∫–ª—é—á–∞–º
    for key in potential_keys:
        if key in st.session_state.excel_data:
            data_key = key
            break
    
    if data_key is None:
        st.warning(f"–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ '{section_name}' –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É' –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        with st.expander("üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
            st.write("–ò—Å–∫–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–ª—é—á–∞–º:")
            for key in potential_keys:
                st.write(f"- {key}")
            st.write("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏ –≤ –¥–∞–Ω–Ω—ã—Ö:")
            for key in sorted(st.session_state.excel_data.keys()):
                st.write(f"- {key}")
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Ç–∞–±–ª–∏—Ü—É
        if st.button("üöÄ –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞"):
            empty_df = pd.DataFrame({
                "–ü–∞—Ä–∞–º–µ—Ç—Ä": ["–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"],
                "–ó–Ω–∞—á–µ–Ω–∏–µ": ["–ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"],
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": ["–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ"]
            })
            st.session_state.excel_data[section_name] = empty_df
            add_changelog_entry(project_id, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", f"–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞: {section_name}")
            st.rerun()
        return
    
    current_df = st.session_state.excel_data[data_key]
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Ç–∏–ø–æ–≤
    display_df = current_df.astype(str)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω—ã—Ö
    st.info(f"üìä –°—Ç—Ä–æ–∫: {len(display_df)} | –°—Ç–æ–ª–±—Ü–æ–≤: {len(display_df.columns)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
    with st.expander("üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω—ã—Ö"):
        col_info = []
        for col in current_df.columns:
            col_info.append({
                "–°—Ç–æ–ª–±–µ—Ü": col,
                "–ó–∞–ø–æ–ª–Ω–µ–Ω–æ —Å—Ç—Ä–æ–∫": len(current_df) - current_df[col].isnull().sum(),
                "–ü—Ä–∏–º–µ—Ä –∑–Ω–∞—á–µ–Ω–∏–π": str(current_df[col].dropna().iloc[0] if len(current_df[col].dropna()) > 0 else "")
            })
        st.dataframe(pd.DataFrame(col_info), use_container_width=True)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å—Ç–æ–ª–±—Ü–æ–≤
    column_config = get_column_config(display_df)
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–∞—è —Ç–∞–±–ª–∏—Ü–∞
    try:
        edited_df = st.data_editor(
            display_df,
            use_container_width=True,
            num_rows="dynamic",
            key=f"editor_{section_name}",
            column_config=column_config
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if not edited_df.equals(display_df):
            add_changelog_entry(project_id, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö", f"–ò–∑–º–µ–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–¥–µ–ª–µ: {section_name}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ session state
        st.session_state.excel_data[section_name] = edited_df
        
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
        st.subheader("üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ)")
        st.dataframe(display_df, use_container_width=True)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    if 'excel_data' not in st.session_state:
        with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ñ–∞–π–ª–æ–≤..."):
            st.session_state.excel_data = load_excel_data()
    
    if 'projects_database' not in st.session_state:
        with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤..."):
            st.session_state.projects_database = load_projects_database()
    
    if 'changelog' not in st.session_state:
        st.session_state.changelog = load_changelog()
    
    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
    if st.session_state.current_view == "projects_list":
        show_projects_list()
    elif st.session_state.current_view == "project_detail":
        show_project_detail()
    elif st.session_state.current_view == "new_project":
        show_new_project_form()
    elif st.session_state.current_view == "edit_project":
        show_edit_project_form()
    elif st.session_state.current_view == "changelog":
        show_changelog()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–∞–π–¥–±–∞—Ä–µ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    if st.session_state.current_view == "projects_list":
        st.sidebar.markdown("---")
        with st.sidebar.expander("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
            st.markdown("""
            ### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–∫–µ–π—Å–∞–º–∏
            
            **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
            - ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
            - üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
            - üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É L0-L5, –≤–ª–∞–¥–µ–ª—å—Ü—É, –æ—Ç–¥–µ–ª—É
            - üìñ –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            - ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
            - üìë –†–∞–±–æ—Ç–∞ —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
            - üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            - ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ —Ä–∞–∑–¥–µ–ª—ã
            - üìú –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            
            **–°—Ç–∞—Ç—É—Å—ã –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ (L0-L5):**
            - L0: –ò–¥–µ—è
            - L1: –ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ
            - L2: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            - L3: –ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ
            - L4: –ó–∞–≤–µ—Ä—à–µ–Ω–æ
            - L5: –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
            
            **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
            1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            3. –†–∞–±–æ—Ç–∞–π—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
            4. –î–æ–±–∞–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
            5. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏–∏
            6. –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            """)

if __name__ == "__main__":
    main() 